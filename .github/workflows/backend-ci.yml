name: Spring Backend CI

on:
  pull_request:
    branches: [ master ]
    paths:
      - '.github/workflows/backend-*'
      - 'pom.xml'
      - 'src/main/java/**'
      - 'src/test/java/**'
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/backend-*'
      - 'pom.xml'
      - 'src/main/java/**'
      - 'src/test/java/**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Prepare JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Calculate version
        run: echo REVISION=$(grep -oP '(?<=<revision>).*?(?=</revision>)' pom.xml)-${GITHUB_SHA:0:8} >> $GITHUB_ENV

      - name: Maven Build
        run: mvn package -Drevision=${REVISION}

      - name: Maven Integration Tests
        run: mvn failsafe:integration-test failsafe:verify

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: |
            target/surefire-reports/TEST-*.xml
            target/failsafe-reports/TEST-*.xml

# TODO: need a repository to push to
#      - name: Unpack JAR
#        run: mkdir exploded-jar && cd exploded-jar && java -Djarmode=layertools -jar ../target/kika.jar extract
#
#      - name: Login to Registry
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Build Image
#        id: docker_build
#        if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
#        uses: docker/build-push-action@v2
#        with:
#          context: ./
#          file: src/main/docker/backend.Dockerfile
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/kika-backend:${REVISION}
#
#      - name: Image digest
#        run: echo ${{ steps.docker_build.outputs.digest }}

